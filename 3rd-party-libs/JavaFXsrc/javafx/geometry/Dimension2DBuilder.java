/*
 * Copyright (c) 2011, 2014, Oracle and/or its affiliates. All rights reserved.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */

package javafx.geometry;

/**
Builder class for javafx.geometry.Dimension2D
@see javafx.geometry.Dimension2D
@deprecated This class is deprecated and will be removed in the next version
* @since JavaFX 2.0
*/
@javax.annotation.Generated("Generated by javafx.builder.processor.BuilderProcessor")
@Deprecated
public class Dimension2DBuilder<B extends javafx.geometry.Dimension2DBuilder<B>> implements javafx.util.Builder<javafx.geometry.Dimension2D> {
    protected Dimension2DBuilder() {
    }

    /** Creates a new instance of Dimension2DBuilder. */
    @SuppressWarnings({"deprecation", "rawtypes", "unchecked"})
    public static javafx.geometry.Dimension2DBuilder<?> create() {
        return new javafx.geometry.Dimension2DBuilder();
    }

    private double height;
    /**
    Set the value of the {@link javafx.geometry.Dimension2D#getHeight() height} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B height(double x) {
        this.height = x;
        return (B) this;
    }

    private double width;
    /**
    Set the value of the {@link javafx.geometry.Dimension2D#getWidth() width} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B width(double x) {
        this.width = x;
        return (B) this;
    }

    /**
    Make an instance of {@link javafx.geometry.Dimension2D} based on the properties set on this builder.
    */
    public javafx.geometry.Dimension2D build() {
        javafx.geometry.Dimension2D x = new javafx.geometry.Dimension2D(this.width, this.height);
        return x;
    }
}
