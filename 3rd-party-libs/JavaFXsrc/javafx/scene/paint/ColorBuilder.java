/*
 * Copyright (c) 2011, 2014, Oracle and/or its affiliates. All rights reserved.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */

package javafx.scene.paint;

/**
Builder class for javafx.scene.paint.Color
@see javafx.scene.paint.Color
@deprecated This class is deprecated and will be removed in the next version
* @since JavaFX 2.0
*/
@javax.annotation.Generated("Generated by javafx.builder.processor.BuilderProcessor")
@Deprecated
public class ColorBuilder<B extends javafx.scene.paint.ColorBuilder<B>> implements javafx.util.Builder<javafx.scene.paint.Color> {
    protected ColorBuilder() {
    }

    /** Creates a new instance of ColorBuilder. */
    @SuppressWarnings({"deprecation", "rawtypes", "unchecked"})
    public static javafx.scene.paint.ColorBuilder<?> create() {
        return new javafx.scene.paint.ColorBuilder();
    }

    private double blue;
    /**
    Set the value of the {@link javafx.scene.paint.Color#getBlue() blue} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B blue(double x) {
        this.blue = x;
        return (B) this;
    }

    private double green;
    /**
    Set the value of the {@link javafx.scene.paint.Color#getGreen() green} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B green(double x) {
        this.green = x;
        return (B) this;
    }

    private double opacity = 1;
    /**
    Set the value of the {@link javafx.scene.paint.Color#getOpacity() opacity} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B opacity(double x) {
        this.opacity = x;
        return (B) this;
    }

    private double red;
    /**
    Set the value of the {@link javafx.scene.paint.Color#getRed() red} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B red(double x) {
        this.red = x;
        return (B) this;
    }

    /**
    Make an instance of {@link javafx.scene.paint.Color} based on the properties set on this builder.
    */
    public javafx.scene.paint.Color build() {
        javafx.scene.paint.Color x = new javafx.scene.paint.Color(this.red, this.green, this.blue, this.opacity);
        return x;
    }
}
