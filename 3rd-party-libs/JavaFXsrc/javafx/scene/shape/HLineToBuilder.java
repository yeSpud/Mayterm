/*
 * Copyright (c) 2011, 2014, Oracle and/or its affiliates. All rights reserved.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */

package javafx.scene.shape;

/**
Builder class for javafx.scene.shape.HLineTo
@see javafx.scene.shape.HLineTo
@deprecated This class is deprecated and will be removed in the next version
* @since JavaFX 2.0
*/
@javax.annotation.Generated("Generated by javafx.builder.processor.BuilderProcessor")
@Deprecated
public class HLineToBuilder<B extends javafx.scene.shape.HLineToBuilder<B>> extends javafx.scene.shape.PathElementBuilder<B> implements javafx.util.Builder<javafx.scene.shape.HLineTo> {
    protected HLineToBuilder() {
    }

    /** Creates a new instance of HLineToBuilder. */
    @SuppressWarnings({"deprecation", "rawtypes", "unchecked"})
    public static javafx.scene.shape.HLineToBuilder<?> create() {
        return new javafx.scene.shape.HLineToBuilder();
    }

    private boolean __set;
    public void applyTo(javafx.scene.shape.HLineTo x) {
        super.applyTo(x);
        if (__set) x.setX(this.x);
    }

    private double x;
    /**
    Set the value of the {@link javafx.scene.shape.HLineTo#getX() x} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B x(double x) {
        this.x = x;
        __set = true;
        return (B) this;
    }

    /**
    Make an instance of {@link javafx.scene.shape.HLineTo} based on the properties set on this builder.
    */
    public javafx.scene.shape.HLineTo build() {
        javafx.scene.shape.HLineTo x = new javafx.scene.shape.HLineTo();
        applyTo(x);
        return x;
    }
}
