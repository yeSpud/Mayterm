/*
 * Copyright (c) 2011, 2014, Oracle and/or its affiliates. All rights reserved.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */

package javafx.scene.shape;

/**
Builder class for javafx.scene.shape.Arc
@see javafx.scene.shape.Arc
@deprecated This class is deprecated and will be removed in the next version
* @since JavaFX 2.0
*/
@javax.annotation.Generated("Generated by javafx.builder.processor.BuilderProcessor")
@Deprecated
public class ArcBuilder<B extends javafx.scene.shape.ArcBuilder<B>> extends javafx.scene.shape.ShapeBuilder<B> implements javafx.util.Builder<javafx.scene.shape.Arc> {
    protected ArcBuilder() {
    }

    /** Creates a new instance of ArcBuilder. */
    @SuppressWarnings({"deprecation", "rawtypes", "unchecked"})
    public static javafx.scene.shape.ArcBuilder<?> create() {
        return new javafx.scene.shape.ArcBuilder();
    }

    private int __set;
    public void applyTo(javafx.scene.shape.Arc x) {
        super.applyTo(x);
        int set = __set;
        if ((set & (1 << 0)) != 0) x.setCenterX(this.centerX);
        if ((set & (1 << 1)) != 0) x.setCenterY(this.centerY);
        if ((set & (1 << 2)) != 0) x.setLength(this.length);
        if ((set & (1 << 3)) != 0) x.setRadiusX(this.radiusX);
        if ((set & (1 << 4)) != 0) x.setRadiusY(this.radiusY);
        if ((set & (1 << 5)) != 0) x.setStartAngle(this.startAngle);
        if ((set & (1 << 6)) != 0) x.setType(this.type);
    }

    private double centerX;
    /**
    Set the value of the {@link javafx.scene.shape.Arc#getCenterX() centerX} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B centerX(double x) {
        this.centerX = x;
        __set |= 1 << 0;
        return (B) this;
    }

    private double centerY;
    /**
    Set the value of the {@link javafx.scene.shape.Arc#getCenterY() centerY} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B centerY(double x) {
        this.centerY = x;
        __set |= 1 << 1;
        return (B) this;
    }

    private double length;
    /**
    Set the value of the {@link javafx.scene.shape.Arc#getLength() length} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B length(double x) {
        this.length = x;
        __set |= 1 << 2;
        return (B) this;
    }

    private double radiusX;
    /**
    Set the value of the {@link javafx.scene.shape.Arc#getRadiusX() radiusX} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B radiusX(double x) {
        this.radiusX = x;
        __set |= 1 << 3;
        return (B) this;
    }

    private double radiusY;
    /**
    Set the value of the {@link javafx.scene.shape.Arc#getRadiusY() radiusY} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B radiusY(double x) {
        this.radiusY = x;
        __set |= 1 << 4;
        return (B) this;
    }

    private double startAngle;
    /**
    Set the value of the {@link javafx.scene.shape.Arc#getStartAngle() startAngle} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B startAngle(double x) {
        this.startAngle = x;
        __set |= 1 << 5;
        return (B) this;
    }

    private javafx.scene.shape.ArcType type;
    /**
    Set the value of the {@link javafx.scene.shape.Arc#getType() type} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B type(javafx.scene.shape.ArcType x) {
        this.type = x;
        __set |= 1 << 6;
        return (B) this;
    }

    /**
    Make an instance of {@link javafx.scene.shape.Arc} based on the properties set on this builder.
    */
    public javafx.scene.shape.Arc build() {
        javafx.scene.shape.Arc x = new javafx.scene.shape.Arc();
        applyTo(x);
        return x;
    }
}
