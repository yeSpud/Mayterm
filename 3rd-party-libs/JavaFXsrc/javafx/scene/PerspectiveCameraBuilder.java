/*
 * Copyright (c) 2011, 2014, Oracle and/or its affiliates. All rights reserved.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */

package javafx.scene;

/**
Builder class for javafx.scene.PerspectiveCamera
@see javafx.scene.PerspectiveCamera
@deprecated This class is deprecated and will be removed in the next version
* @since JavaFX 2.0
*/
@javax.annotation.Generated("Generated by javafx.builder.processor.BuilderProcessor")
@Deprecated
public class PerspectiveCameraBuilder<B extends javafx.scene.PerspectiveCameraBuilder<B>> implements javafx.util.Builder<javafx.scene.PerspectiveCamera> {
    protected PerspectiveCameraBuilder() {
    }

    /** Creates a new instance of PerspectiveCameraBuilder. */
    @SuppressWarnings({"deprecation", "rawtypes", "unchecked"})
    public static javafx.scene.PerspectiveCameraBuilder<?> create() {
        return new javafx.scene.PerspectiveCameraBuilder();
    }

    private boolean __set;
    public void applyTo(javafx.scene.PerspectiveCamera x) {
        if (__set) x.setFieldOfView(this.fieldOfView);
    }

    private double fieldOfView;
    /**
    Set the value of the {@link javafx.scene.PerspectiveCamera#getFieldOfView() fieldOfView} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B fieldOfView(double x) {
        this.fieldOfView = x;
        __set = true;
        return (B) this;
    }

    /**
    Make an instance of {@link javafx.scene.PerspectiveCamera} based on the properties set on this builder.
    */
    public javafx.scene.PerspectiveCamera build() {
        javafx.scene.PerspectiveCamera x = new javafx.scene.PerspectiveCamera();
        applyTo(x);
        return x;
    }
}
