/*
 * Copyright (c) 2011, 2014, Oracle and/or its affiliates. All rights reserved.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */

package javafx.scene.control;

/**
Builder class for javafx.scene.control.ToolBar
@see javafx.scene.control.ToolBar
@deprecated This class is deprecated and will be removed in the next version
* @since JavaFX 2.0
*/
@javax.annotation.Generated("Generated by javafx.builder.processor.BuilderProcessor")
@Deprecated
public class ToolBarBuilder<B extends javafx.scene.control.ToolBarBuilder<B>> extends javafx.scene.control.ControlBuilder<B> implements javafx.util.Builder<javafx.scene.control.ToolBar> {
    protected ToolBarBuilder() {
    }

    /** Creates a new instance of ToolBarBuilder. */
    @SuppressWarnings({"deprecation", "rawtypes", "unchecked"})
    public static javafx.scene.control.ToolBarBuilder<?> create() {
        return new javafx.scene.control.ToolBarBuilder();
    }

    private int __set;
    public void applyTo(javafx.scene.control.ToolBar x) {
        super.applyTo(x);
        int set = __set;
        if ((set & (1 << 0)) != 0) x.getItems().addAll(this.items);
        if ((set & (1 << 1)) != 0) x.setOrientation(this.orientation);
    }

    private java.util.Collection<? extends javafx.scene.Node> items;
    /**
    Add the given items to the List of items in the {@link javafx.scene.control.ToolBar#getItems() items} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B items(java.util.Collection<? extends javafx.scene.Node> x) {
        this.items = x;
        __set |= 1 << 0;
        return (B) this;
    }

    /**
    Add the given items to the List of items in the {@link javafx.scene.control.ToolBar#getItems() items} property for the instance constructed by this builder.
    */
    public B items(javafx.scene.Node... x) {
        return items(java.util.Arrays.asList(x));
    }

    private javafx.geometry.Orientation orientation;
    /**
    Set the value of the {@link javafx.scene.control.ToolBar#getOrientation() orientation} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B orientation(javafx.geometry.Orientation x) {
        this.orientation = x;
        __set |= 1 << 1;
        return (B) this;
    }

    /**
    Make an instance of {@link javafx.scene.control.ToolBar} based on the properties set on this builder.
    */
    public javafx.scene.control.ToolBar build() {
        javafx.scene.control.ToolBar x = new javafx.scene.control.ToolBar();
        applyTo(x);
        return x;
    }
}
