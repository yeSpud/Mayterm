/*
 * Copyright (c) 2011, 2014, Oracle and/or its affiliates. All rights reserved.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */

package javafx.scene.control;

/**
Builder class for javafx.scene.control.Pagination
@see javafx.scene.control.Pagination
@deprecated This class is deprecated and will be removed in the next version
* @since JavaFX 2.2
*/
@javax.annotation.Generated("Generated by javafx.builder.processor.BuilderProcessor")
@Deprecated
public class PaginationBuilder<B extends javafx.scene.control.PaginationBuilder<B>> extends javafx.scene.control.ControlBuilder<B> implements javafx.util.Builder<javafx.scene.control.Pagination> {
    protected PaginationBuilder() {
    }

    /** Creates a new instance of PaginationBuilder. */
    @SuppressWarnings({"deprecation", "rawtypes", "unchecked"})
    public static javafx.scene.control.PaginationBuilder<?> create() {
        return new javafx.scene.control.PaginationBuilder();
    }

    private int __set;
    public void applyTo(javafx.scene.control.Pagination x) {
        super.applyTo(x);
        int set = __set;
        if ((set & (1 << 0)) != 0) x.setCurrentPageIndex(this.currentPageIndex);
        if ((set & (1 << 1)) != 0) x.setMaxPageIndicatorCount(this.maxPageIndicatorCount);
        if ((set & (1 << 2)) != 0) x.setPageCount(this.pageCount);
        if ((set & (1 << 3)) != 0) x.setPageFactory(this.pageFactory);
    }

    private int currentPageIndex;
    /**
    Set the value of the {@link javafx.scene.control.Pagination#getCurrentPageIndex() currentPageIndex} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B currentPageIndex(int x) {
        this.currentPageIndex = x;
        __set |= 1 << 0;
        return (B) this;
    }

    private int maxPageIndicatorCount;
    /**
    Set the value of the {@link javafx.scene.control.Pagination#getMaxPageIndicatorCount() maxPageIndicatorCount} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B maxPageIndicatorCount(int x) {
        this.maxPageIndicatorCount = x;
        __set |= 1 << 1;
        return (B) this;
    }

    private int pageCount;
    /**
    Set the value of the {@link javafx.scene.control.Pagination#getPageCount() pageCount} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B pageCount(int x) {
        this.pageCount = x;
        __set |= 1 << 2;
        return (B) this;
    }

    private javafx.util.Callback<java.lang.Integer,javafx.scene.Node> pageFactory;
    /**
    Set the value of the {@link javafx.scene.control.Pagination#getPageFactory() pageFactory} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B pageFactory(javafx.util.Callback<java.lang.Integer,javafx.scene.Node> x) {
        this.pageFactory = x;
        __set |= 1 << 3;
        return (B) this;
    }

    /**
    Make an instance of {@link javafx.scene.control.Pagination} based on the properties set on this builder.
    */
    public javafx.scene.control.Pagination build() {
        javafx.scene.control.Pagination x = new javafx.scene.control.Pagination();
        applyTo(x);
        return x;
    }
}
