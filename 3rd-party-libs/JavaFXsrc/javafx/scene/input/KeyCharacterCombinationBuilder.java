/*
 * Copyright (c) 2011, 2014, Oracle and/or its affiliates. All rights reserved.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */

package javafx.scene.input;

/**
Builder class for javafx.scene.input.KeyCharacterCombination
@see javafx.scene.input.KeyCharacterCombination
@deprecated This class is deprecated and will be removed in the next version
* @since JavaFX 2.0
*/
@javax.annotation.Generated("Generated by javafx.builder.processor.BuilderProcessor")
@Deprecated
public final class KeyCharacterCombinationBuilder implements javafx.util.Builder<javafx.scene.input.KeyCharacterCombination> {
    protected KeyCharacterCombinationBuilder() {
    }

    /** Creates a new instance of KeyCharacterCombinationBuilder. */
    @SuppressWarnings({"deprecation", "rawtypes", "unchecked"})
    public static javafx.scene.input.KeyCharacterCombinationBuilder create() {
        return new javafx.scene.input.KeyCharacterCombinationBuilder();
    }

    private javafx.scene.input.KeyCombination.ModifierValue alt;
    /**
    Set the value of the {@link javafx.scene.input.KeyCharacterCombination#getAlt() alt} property for the instance constructed by this builder.
    */
    public javafx.scene.input.KeyCharacterCombinationBuilder alt(javafx.scene.input.KeyCombination.ModifierValue x) {
        this.alt = x;
        return this;
    }

    private java.lang.String character;
    /**
    Set the value of the {@link javafx.scene.input.KeyCharacterCombination#getCharacter() character} property for the instance constructed by this builder.
    */
    public javafx.scene.input.KeyCharacterCombinationBuilder character(java.lang.String x) {
        this.character = x;
        return this;
    }

    private javafx.scene.input.KeyCombination.ModifierValue control;
    /**
    Set the value of the {@link javafx.scene.input.KeyCharacterCombination#getControl() control} property for the instance constructed by this builder.
    */
    public javafx.scene.input.KeyCharacterCombinationBuilder control(javafx.scene.input.KeyCombination.ModifierValue x) {
        this.control = x;
        return this;
    }

    private javafx.scene.input.KeyCombination.ModifierValue meta;
    /**
    Set the value of the {@link javafx.scene.input.KeyCharacterCombination#getMeta() meta} property for the instance constructed by this builder.
    */
    public javafx.scene.input.KeyCharacterCombinationBuilder meta(javafx.scene.input.KeyCombination.ModifierValue x) {
        this.meta = x;
        return this;
    }

    private javafx.scene.input.KeyCombination.ModifierValue shift;
    /**
    Set the value of the {@link javafx.scene.input.KeyCharacterCombination#getShift() shift} property for the instance constructed by this builder.
    */
    public javafx.scene.input.KeyCharacterCombinationBuilder shift(javafx.scene.input.KeyCombination.ModifierValue x) {
        this.shift = x;
        return this;
    }

    private javafx.scene.input.KeyCombination.ModifierValue shortcut;
    /**
    Set the value of the {@link javafx.scene.input.KeyCharacterCombination#getShortcut() shortcut} property for the instance constructed by this builder.
    */
    public javafx.scene.input.KeyCharacterCombinationBuilder shortcut(javafx.scene.input.KeyCombination.ModifierValue x) {
        this.shortcut = x;
        return this;
    }

    /**
    Make an instance of {@link javafx.scene.input.KeyCharacterCombination} based on the properties set on this builder.
    */
    public javafx.scene.input.KeyCharacterCombination build() {
        javafx.scene.input.KeyCharacterCombination x = new javafx.scene.input.KeyCharacterCombination(this.character, this.shift, this.control, this.alt, this.meta, this.shortcut);
        return x;
    }
}
