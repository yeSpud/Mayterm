/*
 * Copyright (c) 2011, 2014, Oracle and/or its affiliates. All rights reserved.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */

package javafx.scene.effect;

/**
Builder class for javafx.scene.effect.Reflection
@see javafx.scene.effect.Reflection
@deprecated This class is deprecated and will be removed in the next version
* @since JavaFX 2.0
*/
@javax.annotation.Generated("Generated by javafx.builder.processor.BuilderProcessor")
@Deprecated
public class ReflectionBuilder<B extends javafx.scene.effect.ReflectionBuilder<B>> implements javafx.util.Builder<javafx.scene.effect.Reflection> {
    protected ReflectionBuilder() {
    }

    /** Creates a new instance of ReflectionBuilder. */
    @SuppressWarnings({"deprecation", "rawtypes", "unchecked"})
    public static javafx.scene.effect.ReflectionBuilder<?> create() {
        return new javafx.scene.effect.ReflectionBuilder();
    }

    private int __set;
    public void applyTo(javafx.scene.effect.Reflection x) {
        int set = __set;
        if ((set & (1 << 0)) != 0) x.setBottomOpacity(this.bottomOpacity);
        if ((set & (1 << 1)) != 0) x.setFraction(this.fraction);
        if ((set & (1 << 2)) != 0) x.setInput(this.input);
        if ((set & (1 << 3)) != 0) x.setTopOffset(this.topOffset);
        if ((set & (1 << 4)) != 0) x.setTopOpacity(this.topOpacity);
    }

    private double bottomOpacity;
    /**
    Set the value of the {@link javafx.scene.effect.Reflection#getBottomOpacity() bottomOpacity} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B bottomOpacity(double x) {
        this.bottomOpacity = x;
        __set |= 1 << 0;
        return (B) this;
    }

    private double fraction;
    /**
    Set the value of the {@link javafx.scene.effect.Reflection#getFraction() fraction} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B fraction(double x) {
        this.fraction = x;
        __set |= 1 << 1;
        return (B) this;
    }

    private javafx.scene.effect.Effect input;
    /**
    Set the value of the {@link javafx.scene.effect.Reflection#getInput() input} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B input(javafx.scene.effect.Effect x) {
        this.input = x;
        __set |= 1 << 2;
        return (B) this;
    }

    private double topOffset;
    /**
    Set the value of the {@link javafx.scene.effect.Reflection#getTopOffset() topOffset} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B topOffset(double x) {
        this.topOffset = x;
        __set |= 1 << 3;
        return (B) this;
    }

    private double topOpacity;
    /**
    Set the value of the {@link javafx.scene.effect.Reflection#getTopOpacity() topOpacity} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B topOpacity(double x) {
        this.topOpacity = x;
        __set |= 1 << 4;
        return (B) this;
    }

    /**
    Make an instance of {@link javafx.scene.effect.Reflection} based on the properties set on this builder.
    */
    public javafx.scene.effect.Reflection build() {
        javafx.scene.effect.Reflection x = new javafx.scene.effect.Reflection();
        applyTo(x);
        return x;
    }
}
