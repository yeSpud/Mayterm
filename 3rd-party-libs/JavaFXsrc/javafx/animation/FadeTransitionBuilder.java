/*
 * Copyright (c) 2011, 2014, Oracle and/or its affiliates. All rights reserved.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */

package javafx.animation;

/**
Builder class for javafx.animation.FadeTransition
@see javafx.animation.FadeTransition
@deprecated This class is deprecated and will be removed in the next version
* @since JavaFX 2.0
*/
@javax.annotation.Generated("Generated by javafx.builder.processor.BuilderProcessor")
@Deprecated
public final class FadeTransitionBuilder extends javafx.animation.TransitionBuilder<javafx.animation.FadeTransitionBuilder> implements javafx.util.Builder<javafx.animation.FadeTransition> {
    protected FadeTransitionBuilder() {
    }

    /** Creates a new instance of FadeTransitionBuilder. */
    @SuppressWarnings({"deprecation", "rawtypes", "unchecked"})
    public static javafx.animation.FadeTransitionBuilder create() {
        return new javafx.animation.FadeTransitionBuilder();
    }

    private int __set;
    public void applyTo(javafx.animation.FadeTransition x) {
        super.applyTo(x);
        int set = __set;
        if ((set & (1 << 0)) != 0) x.setByValue(this.byValue);
        if ((set & (1 << 1)) != 0) x.setDuration(this.duration);
        if ((set & (1 << 2)) != 0) x.setFromValue(this.fromValue);
        if ((set & (1 << 3)) != 0) x.setNode(this.node);
        if ((set & (1 << 4)) != 0) x.setToValue(this.toValue);
    }

    private double byValue;
    /**
    Set the value of the {@link javafx.animation.FadeTransition#getByValue() byValue} property for the instance constructed by this builder.
    */
    public javafx.animation.FadeTransitionBuilder byValue(double x) {
        this.byValue = x;
        __set |= 1 << 0;
        return this;
    }

    private javafx.util.Duration duration;
    /**
    Set the value of the {@link javafx.animation.FadeTransition#getDuration() duration} property for the instance constructed by this builder.
    */
    public javafx.animation.FadeTransitionBuilder duration(javafx.util.Duration x) {
        this.duration = x;
        __set |= 1 << 1;
        return this;
    }

    private double fromValue;
    /**
    Set the value of the {@link javafx.animation.FadeTransition#getFromValue() fromValue} property for the instance constructed by this builder.
    */
    public javafx.animation.FadeTransitionBuilder fromValue(double x) {
        this.fromValue = x;
        __set |= 1 << 2;
        return this;
    }

    private javafx.scene.Node node;
    /**
    Set the value of the {@link javafx.animation.FadeTransition#getNode() node} property for the instance constructed by this builder.
    */
    public javafx.animation.FadeTransitionBuilder node(javafx.scene.Node x) {
        this.node = x;
        __set |= 1 << 3;
        return this;
    }

    private double toValue;
    /**
    Set the value of the {@link javafx.animation.FadeTransition#getToValue() toValue} property for the instance constructed by this builder.
    */
    public javafx.animation.FadeTransitionBuilder toValue(double x) {
        this.toValue = x;
        __set |= 1 << 4;
        return this;
    }

    /**
    Make an instance of {@link javafx.animation.FadeTransition} based on the properties set on this builder.
    */
    public javafx.animation.FadeTransition build() {
        javafx.animation.FadeTransition x = new javafx.animation.FadeTransition();
        applyTo(x);
        return x;
    }
}
